name: üõ†Ô∏è Build All
on: 
    push:
        tags:
          - '*'
    pull_request:
        paths: [ '**' ]
    workflow_dispatch:
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: ${{ matrix.name }} ${{ matrix.target }}
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
        identifier: [linux, windows, macos, ios, android-arm32, android-arm64, web-nothreads]
        target: [debug, release]
        include:
          - identifier: linux
            platform: linux
            name: üêß Linux
            runner: ubuntu-22.04
            flags: arch=x86_64
            
          - identifier: windows
            platform: windows
            name: ü™ü Windows
            runner: ubuntu-22.04
            flags: arch=x86_64

          - identifier: macos
            platform: macos
            name: üçé macOS
            runner: macos-latest
            flags: arch=universal

          - identifier: ios
            platform: ios
            name: üçè iOS
            runner: macos-latest
            flags: arch=universal

          - identifier: android-arm32
            platform: android
            name: ü§ñ Android Arm32
            runner: ubuntu-22.04
            flags: arch=arm32

          - identifier: android-arm64
            platform: android
            name: ü§ñ Android Arm64
            runner: ubuntu-22.04
            flags: arch=arm64

          - identifier: web-nothreads
            platform: web
            name: üåê Web No-threads
            runner: ubuntu-22.04
            flags: threads=no
    steps:
      - name: Checkout Godot Synth
        uses: actions/checkout@v4
        with:
          submodules: recursive
        
      - name: Setup Base Dependencies
        uses: ./.github/actions/base-deps
        with:
            platform: ${{ matrix.platform }}

      - name: Setup Build Cache
        uses: ./.github/actions/build-cache
        with:
          cache-name: ${{ matrix.identifier }}-${{ matrix.target }}
        continue-on-error: true

      - name: Build Godot Synth
        env:
            SCONS_CACHE: "${{ github.workspace }}/.scons-cache/"
            TARGET: 'template_${{ matrix.target }}'
        shell: sh
        run: |
            scons target=$TARGET platform='${{ matrix.platform }}' ${{ matrix.flags }} debug_symbols=no -j2

      - name: Strip Libraries (Windows/Linux)
        if: ${{ matrix.platform == 'windows' || matrix.platform == 'linux' }}
        shell: sh
        run: |
          ls -l project/addons/godot_synth/bin/
          strip project/addons/godot_synth/bin/libgodot_synth.*
          ls -l project/addons/godot_synth/bin/

      - name: Include Files
        shell: sh
        run: |
          cp '${{ github.workspace }}/README.md' '${{ github.workspace }}/LICENSE' ${{ github.workspace }}/project/addons/godot_synth/

      - name: Upload Package
        uses: actions/upload-artifact@v4
        with:
          include-hidden-files: true
          name: t3d-${{ matrix.identifier }}-${{ matrix.target }}
          path: |
            ${{ github.workspace }}/project/

  merge:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Merge Artifacts
        uses: actions/upload-artifact/merge@v4
        with:
          include-hidden-files: true
          name: ${{ github.event.repository.name }}
          pattern: t3d-*
          delete-merged: true

  release:
    runs-on: ubuntu-latest
    needs: merge
    permissions:
        contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}  # Use the latest tag
          release_name: Godot Synth Latest
          draft: false
          prerelease: false
          files: ${{ github.event.repository.name }}
